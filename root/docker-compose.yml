version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: seatbooker-postgres
    environment:
      POSTGRES_DB: seatbooker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - seatbooker-network

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: seatbooker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - seatbooker-network

  # Backend API
  backend:
    build:
      context: ./seatbooker-backend
      dockerfile: Dockerfile
    container_name: seatbooker-backend
    environment:
      - PORT=8080
      - ENVIRONMENT=development
      - DATABASE_URL=postgres://postgres:password@postgres:5432/seatbooker?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./seatbooker-backend:/app
      - /app/tmp
    networks:
      - seatbooker-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./seatbooker-frontend
      dockerfile: Dockerfile
    container_name: seatbooker-frontend
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080/api/v1
      - REACT_APP_ENVIRONMENT=development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./seatbooker-frontend:/app
      - /app/node_modules
    networks:
      - seatbooker-network
    restart: unless-stopped

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: seatbooker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - seatbooker-network
    profiles:
      - production

  # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: seatbooker-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@seatbooker.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - seatbooker-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  seatbooker-network:
    driver: bridge